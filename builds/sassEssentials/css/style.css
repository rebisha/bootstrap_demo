@import url("https://fonts.googleapis.com/css?family=IBM+Plex+Sans+Condensed|IBM+Plex+Serif|Open+Sans+Condensed:300|Slabo+27px");/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:0.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:62.5%}body{margin:0;padding:0;font-size:1.8rem;font-family:"IBM Plex Sans Condensed",sans-serif;color:#6d73c2;background-color:#eee8d6}.container{width:80%;margin:0 auto}h1,h2,h3,h4,h5,h6{font-family:"Slabo 27px",serif;color:#ca07f9}.btn,.btn-default,.btn-hot,.btn-cool{display:inline-block;padding:6px 12px;text-align:center;white-space:nowrap;vertical-align:middle;cursor:pointer;border:none;border-radius:4px;font-family:"IBM Plex Serif",serif;color:#eee8d6}.btn-default{background-color:#0A0A32}.btn-hot{background-color:#d14348}.btn-cool{background-color:#009ac1}.grid:before,.grid:after{content:'';display:table}.grid:after{clear:both}.grid .item{float:left;width:32%}.grid .item:nth-child(n){margin-bottom:2%;margin-right:2%}.grid .item:nth-child(3n){margin-bottom:0;margin-right:0}.grid img{display:block;border-radius:10px;max-width:100%}.background{background-color:#0A0A32;margin:20px 0;width:100%;display:table}.background .container{display:table-cell;vertical-align:bottom;padding-bottom:20px}.background .container h1{color:#ffba00;font-family:"IBM Plex Sans Condensed",sans-serif;font-size:5rem;line-height:105%;margin-bottom:0;padding:0 10%}.background .container p{padding:0 10%;margin-top:0;color:#eee8d6}.jumbotron{background:linear-gradient(to bottom, transparent, rgba(0,0,0,0.6)),url("../image/water.jpg");background-repeat:no-repeat;background-position:center center;background-size:cover;height:600px}.bridge{background:linear-gradient(to bottom, transparent, rgba(0,0,0,0.6)),url("../image/bridge.jpg");background-repeat:no-repeat;background-position:center center;background-size:cover;height:600px}.media{margin:0;padding:0;list-style:none}.media .item{padding-bottom:10px;padding-top:10px;padding-left:10px;border-top:2px dotted #d14348}.media .item:hover{background:#ffba00}.media .item:last-of-type{border-bottom:2px dotted #d14348}.media .item:before,.media .item:after{content:'';display:table}.media .item:after{clear:both}.media img{float:left;margin-right:10px}.media .head{margin:0;padding:0;font-size:2rem}li{color:#009ac1}ul li a{color:#009ac1}#forms{font-family:"IBM Plex Serif",serif}.table{font-size:1.5rem;text-align:left;width:100%}.table caption{font-size:2.5rem;text-align:left;padding-bottom:5px}.table>thead>tr:nth-child(even),.table>tbody>tr:nth-child(even),.table>tfoot>tr:nth-child(even){background-color:rgba(255,186,0,0.2)}.table>thead>tr:nth-child(even):hover,.table>tbody>tr:nth-child(even):hover,.table>tfoot>tr:nth-child(even):hover{background-color:#ffba00}.table>thead>tr>th,.table>thead>tr>td,.table>tbody>tr>th,.table>tbody>tr>td,.table>tfoot>tr>th,.table>tfoot>tr>td{padding:10px;border-bottom:1px dotted #009ac1}.table>thead>tr{background-color:#009ac1;color:#eee8d6}.table>thead>tr:hover{background-color:#c12700}.table>thead>tr>th{border-bottom:0}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
